# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    tags:
      - 'v*'

# permissions:
#   contents: read

jobs:
  run_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest tox
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run tests with tox
      run: tox


  build_release:
    needs: run_test

    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: build
        run: |
          python3 setup.py sdist bdist_wheel
          SDIST=$(ls ./dist/*.tar.gz)
          echo "SDIST: ${SDIST}"
          echo "::set-output name=sdist::${SDIST}"
          WHEEL=$(ls ./dist/*.whl)
          echo "WHEEL: ${WHEEL}"
          echo "::set-output name=wheel::${WHEEL}"
      - name: version
        run: |
          VERSION=$( python3 setup.py --version )
          echo "VERSION: ${VERSION}"
          echo "::set-output name=version::${VERSION}"
        id: version
      - name: release
        run: |
          URL=$( hub release create -m ${{ steps.version.outputs.version }} "release_"${{ steps.version.outputs.version }} )
          echo "URL: ${URL}"
          echo "::set-output name=upload_url::${URL}"
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: debug-info
        run: |
          echo "VERSION: "${{ steps.release.outputs.upload_url }}
          echo "upload_url: "${{ steps.release.outputs.upload_url }}
          echo "asset_name:"
          echo "  sdist: "${{ steps.build.outputs.sdist }}
          echo "  wheel: "${{ steps.build.outputs.wheel }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload sdist artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.build.outputs.sdist }}
          asset_name: ${{ steps.build.outputs.sdist }}
          asset_content_type: application/x-gtar
      - name: upload wheel artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.build.outputs.wheel }}
          asset_name: ${{ steps.build.outputs.wheel }}
          asset_content_type: application/x-wheel+zip
